@using WordReport.ViewModels
@model DocumentViewModel

<style>
    .item-group {
        margin-bottom: 10px;
    }

        .item-group input {
            margin-right: 5px;
        }

        .item-group button {
            /* background-color: red; */
            color: white;
            border: none;
            padding: 4px 8px;
            cursor: pointer;
        }

    .table-group {
        border: 1px solid #ccc;
        padding: 10px;
        margin-bottom: 20px;
    }
</style>

<form asp-action="GenerateWord" method="post" enctype="multipart/form-data">
    <div>
        <label>Title:</label>
        <input type="text" name="Title" class="form-control" />
    </div>
    <div>
        <label>Date:</label>
        <input type="text" name="Date" class="form-control" />
    </div>
    <div>
        <label>Logo:</label>
        <input type="file" name="Logo" class="form-control" accept="image/*" />
        <small class="form-text text-muted">Select an image file for the logo (JPG, PNG, GIF, BMP)</small>
    </div>

    <hr />
    <h4>Tables</h4>
    <div id="tableGroups">
        <!-- Dynamic table groups will be inserted here -->
    </div>

    <button type="button" onclick="addTableGroup()" class="btn btn-primary">Add Table</button>
    <hr />
    <button type="submit" class="btn btn-success">Generate Word</button>
</form>

@section Scripts {
    <script>
        let tableIndex = 0;

        function addTableGroup() {
            const groupContainer = document.getElementById("tableGroups");

            const groupDiv = document.createElement("div");
            groupDiv.classList.add("table-group");
            groupDiv.dataset.tableIndex = tableIndex;

            groupDiv.innerHTML = `
                <div>
                    <label>Placeholder for this table (e.g., Items1):</label>
                    <input type="text" name="Tables[${tableIndex}].Key" class="form-control mb-4" />
                </div>
                <div id="items-${tableIndex}">
                    <!-- Rows will go here -->
                </div>
                <button type="button" onclick="addItemRow(${tableIndex})" class="btn btn-primary">Add Row</button>
                <button type="button" onclick="removeTableGroup(this)" class="btn btn-danger">Remove Table</button>
                <hr />
            `;

            groupContainer.appendChild(groupDiv);
            addItemRow(tableIndex); // Add one default row

            tableIndex++;
        }

        function addItemRow(tableIdx, name = '', quantity = '') {
            const container = document.getElementById(`items-${tableIdx}`);
            const itemCount = container.querySelectorAll('.item-group').length;

            const itemDiv = document.createElement("div");
            itemDiv.classList.add("item-group");

            itemDiv.innerHTML = `
                <input type="text" name="Tables[${tableIdx}].Items[${itemCount}].Name" placeholder="Name" value="${name}" />
                <input type="number" name="Tables[${tableIdx}].Items[${itemCount}].Quantity" placeholder="Quantity" value="${quantity}" />
                <button type="button" onclick="removeRow(this)" class="btn btn-danger">Remove</button>
            `;

            container.appendChild(itemDiv);
        }

        function removeRow(button) {
            const row = button.parentNode;
            row.remove();
        }

        function removeTableGroup(button) {
            const groupDiv = button.closest('.table-group');
            groupDiv.remove();
        }

        // Add one default table on page load
        document.addEventListener("DOMContentLoaded", function () {
            addTableGroup();
        });
    </script>
}
